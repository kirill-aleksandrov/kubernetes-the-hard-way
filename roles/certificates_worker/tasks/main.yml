- name: Prepare certificate directories
  file:
    path: "{{ item.path }}"
    state: directory
  with_items:
    - path: '{{ deployer.certificate.directory }}/configs/worker'
    - path: '{{ deployer.certificate.directory }}/worker/kube-proxy'
    - path: '{{ deployer.certificate.directory }}/worker/kubelet'

- name: Render kube-proxy config
  template:
    src: kube-proxy-csr.json.j2
    dest: "{{ deployer.certificate.directory }}/configs/worker/kube-proxy-csr.json"

- name: Render kubelet configs
  template:
    src: kubelet-csr.json.j2
    dest: "{{ deployer.certificate.directory }}/configs/worker/kubelet-{{ item }}-csr.json"
  with_items: "{{ groups['worker'] }}"

- name: Generate kube-proxy certificate
  args:
    chdir: "{{ deployer.certificate.directory }}/worker/kube-proxy"
  shell: |
    cfssl gencert \
    -ca={{ deployer.certificate.directory }}/ca/intermediates/kubernetes/kubernetes-ca.pem \
    -ca-key={{ deployer.certificate.directory }}/ca/intermediates/kubernetes/kubernetes-ca-key.pem \
    -config={{ deployer.certificate.directory }}/configs/cfssl-config.json \
    -profile=client-server \
    {{ deployer.certificate.directory }}/configs/worker/kube-proxy-csr.json \
    | cfssljson -bare kube-proxy

- name: Generate kube-proxy certificate
  args:
    chdir: "{{ deployer.certificate.directory }}/worker/kubelet"
  shell: |
    cfssl gencert \
    -ca={{ deployer.certificate.directory }}/ca/intermediates/kubernetes/kubernetes-ca.pem \
    -ca-key={{ deployer.certificate.directory }}/ca/intermediates/kubernetes/kubernetes-ca-key.pem \
    -config={{ deployer.certificate.directory }}/configs/cfssl-config.json \
    -profile=client-server \
    {{ deployer.certificate.directory }}/configs/worker/kubelet-{{ item }}-csr.json \
    | cfssljson -bare {{ item }}
  with_items: "{{ groups['worker'] }}"